{"version":3,"sources":["components/clock/Clock.js","components/clock/SmallClock.js","components/App.js","index.js"],"names":["Clock","props","state","time","timeZone","updateTime","bind","startTimer","num","toString","length","this","timer","setInterval","seconds","minutes","hours","setState","str","match","split","apiURL","_asyncRequest","fetch","then","res","json","data","getTimeFromUTCString","datetime","timezone","utc_offset","catch","err","console","log","className","Object","keys","map","key","index","fillZeros","React","Component","SmallClock","arr","outputStr","join","App","responseList","randomList","fillRandomList","slice","amount","scope","indexes","elements","validAreas","cnt","random","Math","round","isValidZone","i","regex","RegExp","test","includes","push","forEach","href","rel","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb94c182.chunk.js","sourcesContent":["import './Clock.css';\nimport React from 'react';\n\nclass Clock extends React.Component\n{\n    constructor(props){\n        super(props);\n        this.state = {\n            time: null,\n            timeZone: null,\n        }\n        this.updateTime = this.updateTime.bind(this);\n        this.startTimer = this.startTimer.bind(this);\n    }\n\n    fillZeros(num){\n        if(num.toString().length < 2){\n            return '0' + num;\n        }\n\n        return num.toString();\n    }\n\n    startTimer(){\n        this.timer = setInterval(this.updateTime, 1000);\n    }\n\n    updateTime(){\n        let time = this.state.time;\n\n        time.seconds++;\n\n        if(time.seconds === 60){\n            time.seconds = 0;\n            time.minutes++;\n        }\n\n        if(time.minutes === 60){\n            time.minutes = 0;\n            time.hours++;\n        }\n\n        if(time.hours === 24){\n            time.hours = 0;\n        }\n\n        this.setState({time});\n    }\n\n    getTimeFromUTCString(str){\n        const [hours, minutes, seconds] = str.match(/(\\d{2}):(\\d{2}):(\\d{2})/)[0].split(':');\n\n        let time = {\n            hours,\n            minutes,\n            seconds,\n        }\n\n        return time;\n    }\n\n    componentDidMount(){\n        let apiURL;\n\n        if(this.props.timeZone === 'local'){\n            apiURL = 'http://worldtimeapi.org/api/ip';\n        }\n        else{\n            apiURL = `http://worldtimeapi.org/api/timezone/${this.props.timeZone}`;\n        }\n\n        this._asyncRequest = fetch(apiURL)\n                                .then(res => res.json())\n                                .then(data => {\n                                    this._asyncRequest = null;\n                                    this.setState({\n                                        time: this.getTimeFromUTCString(data.datetime),\n                                        timeZone: `${data.timezone} ${data.utc_offset}`\n                                    })\n                                })\n                                .then(() => this.startTimer())\n                                .catch(err => console.log(err))\n    }\n    \n    render(){\n        const time = this.state.time;\n\n        if(this.state.time === null){\n            return(<div className=\"clock__preloader\"></div>);\n        }\n        else{\n            Object.keys(time).map((key, index) => time[key] = this.fillZeros(time[key]));\n\n            return(\n                <div className=\"clock\">\n                    <p className=\"clock__time\">\n                        <span className=\"clock__time__number\">\n                            {time.hours}\n                        </span>\n                        :\n                        <span className=\"clock__time__number\">\n                            {time.minutes}\n                        </span>\n                        :\n                        <span className=\"clock__time__number\">\n                            {time.seconds}\n                        </span>\n                    </p>\n                    <p className=\"clock__description\">\n                        {this.state.timeZone}\n                    </p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default Clock;","import './SmallClock.css';\nimport React from 'react';\nimport Clock from './Clock.js'\n\nclass SmallClock extends Clock\n{\n    render(){\n        const time = this.state.time;\n\n        if(this.state.time === null){\n            return(\n                <div className=\"smallclock\">\n                    <div className=\"smallclock__preloader\">\n\n                    </div>\n                </div>\n            );\n        }\n        else{\n            Object.keys(time).map((key, index) => time[key] = this.fillZeros(time[key]));\n\n            let arr = this.state.timeZone.split(' ')[0].split('/');\n            let outputStr = arr.length === 1 ? arr[0] : `${arr[arr.length - 1].split('_').join(' ')} (${arr[0]})`\n\n            return(\n                <div className=\"smallclock\">\n                    <p className=\"smallclock__time\">\n                        <span className=\"smallclock__time__number\">\n                            {time.hours}\n                        </span>\n                        :\n                        <span className=\"smallclock__time__number\">\n                            {time.minutes}\n                        </span>\n                        :\n                        <span className=\"smallclock__time__number\">\n                            {time.seconds}\n                        </span>\n                    </p>\n                    <p className=\"smallclock__description\">\n                        {outputStr}\n                    </p>\n                </div>\n            );\n        }\n    }\n}\n\nexport default SmallClock;","import './App.css';\nimport React from 'react';\nimport Clock from './clock/Clock.js'\nimport SmallClock from './clock/SmallClock.js'\n\nclass App extends React.Component\n{\n  constructor(){\n    super();\n    this.state = {\n      responseList: null,\n      randomList: null,\n    }\n    this.fillRandomList = this.fillRandomList.bind(this);\n  }\n\n  componentDidMount(){\n    let apiURL = 'http://worldtimeapi.org/api/timezone';\n\n    this._asyncRequest = fetch(apiURL)\n                            .then(res => res.json())\n                            .then(data => this.setState({responseList: data.slice()}))\n                            .then(() => this.fillRandomList())\n                            .catch(err => console.log(err));\n  }\n\n  fillRandomList(amount = 10){\n\n    if(!this.state.responseList){\n      return;\n    }\n\n    let scope = this.state.responseList.length - 1;\n    let indexes = [];\n    let elements = [];\n    let validAreas = [\n      'Africa', 'America', 'Antarctica', 'Antarctica', 'Asia', 'Atlantic', 'Australia', 'Europe', 'Indian', 'Pacific'\n    ];\n    let cnt = 0;\n\n    while(cnt < amount){\n\n      let random = Math.round(Math.random() * scope);\n      let isValidZone = false;\n\n      for(let i = 0; i < validAreas.length; ++i){\n        let regex = new RegExp(validAreas[i]);\n\n        if(regex.test(this.state.responseList[random])){\n          isValidZone = true;\n          break;\n        }\n      }\n\n      if(!indexes.includes(random) && isValidZone){\n        indexes.push(random);\n        cnt++;\n      }\n    }\n\n    indexes.forEach(index => elements.push(this.state.responseList[index]));\n    this.setState({randomList: elements});\n  }\n\n  render(){\n    const randomList = this.state.randomList;\n\n    if(this.state.randomList !== null){\n      return (\n        <div className=\"app\">\n          <h1>World time overview</h1>\n          <Clock timeZone=\"local\"/>\n          <div className=\"smallclocks\">\n            {randomList.map((timezone, index) => (\n              <SmallClock key={index} timeZone={timezone} />\n            ))}\n          </div>\n          <footer>\n            Thanks to the creators of: \n            <a \n              href=\"http://worldtimeapi.org/\"\n              rel=\"noreferrer noopener\"\n              target=\"_blank\"\n            >\n              http://worldtimeapi.org/\n            </a>\n          </footer>\n        </div>\n      );\n    }\n\n    else{\n      return (<div className=\"app\"></div>)\n    }\n\n    \n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}